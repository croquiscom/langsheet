_title: concatenate
C:
  body: |-
    \keyword{char\} *s1 = \string{"hello"\};
    \keyword{char\} *s2 = \string{" world"\};
    \keyword{char\} *s3 = (\keyword{char\} *)\stdlib{malloc\}(\stdlib{strlen\}(s1)
        +\stdlib{strlen\}(s2)+1);
    \stdlib{strcpy\}(s3, s1);
    \stdlib{strcat\}(s3, s2);
C++:
  body: |-
    \comment{// destructive\}
    \stdlib{string\} s1 = \string{"hello"\};
    s1 += \string{" world"\};
    \hr{\}
    \comment{// non-destructive\}
    \stdlib{string\} s1 = \string{"hello"\};
    \stdlib{string\} s2 = s1 + \string{" world"\};
CoffeeScript:
  body: |-
    \string{'hello'\} + \string{' world'\}
Java:
  body: |-
    \string{"hello"\} + \string{" world"\}
JavaScript:
  body: |-
    \string{'hello'\} + \string{' world'\}
Kotlin:
  body: |-
    \string{"hello"\} + \string{" world"\}
Objective-C:
  body: |-
    \comment{// destructive\}
    \stdlib{NSMutableString\} *s1 = [\string{@"hello"\} \stdlib{mutableCopy\}];
    [s1 \stdlib{appendString\}:\string{@" world"\}];
    \hr{\}
    \comment{// non-destructive\}
    \stdlib{NSString\} *s1 = \string{@"hello"\};
    \stdlib{NSString\} *s2 = [s1 \stdlib{stringByAppendingString\}:\string{@" world"\}];
Lua:
  body: |-
    \string{'hello'\} .. \string{' world'\}
Perl:
  body: |-
    \string{'hello'\} . \string{' world'\}
PHP:
  body: |-
    \string{'hello'\} . \string{' world'\}
Ruby:
  body: |-
    \string{'hello'\} + \string{' world'\}
Python:
  body: |-
    \string{'hello'\} + \string{' world'\}
Swift:
  body: |-
    \string{"hello"\} + \string{" world"\}
